<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[GeekLok]]></title>
  <link href="http://carmenloklok.github.io/atom.xml" rel="self"/>
  <link href="http://carmenloklok.github.io/"/>
  <updated>2013-12-11T23:09:04+08:00</updated>
  <id>http://carmenloklok.github.io/</id>
  <author>
    <name><![CDATA[GeekLok]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[这一年多的感悟]]></title>
    <link href="http://carmenloklok.github.io/blog/2013/11/06/inspirations-more-than-a-year/"/>
    <updated>2013-11-06T22:45:00+08:00</updated>
    <id>http://carmenloklok.github.io/blog/2013/11/06/inspirations-more-than-a-year</id>
    <content type="html"><![CDATA[<p>本篇博客我已经拖了很久了，对我的朋友们道一声歉先。很感谢我的另一半，家人和朋友，他们是我一直坚持学习和努力的源动力之一，我知道只要朝着正确的方向努力，即使是我这样的凡人也能取得属于自己的成功。<strong>赢家在于永不言弃</strong><br/>
第一篇博客我想写下自己这一年多的感悟，虽然我现在有许多的不足，但我会让自己变得越来越好。</p>

<!-- more -->


<h2>把有价值的思考记录下来</h2>

<p>几个月前，我发现了一个很有价值的博客，他的作者是<a href="http://mindhacks.cn/">刘末鹏</a>，他对很多事物的看法都是很让我敬佩的，我从他的博客中学到很多，其中一篇博客<a href="http://mindhacks.cn/2009/02/15/why-you-should-start-blogging-now/">为什么你应该（从现在开始就）写博客</a>讲述了写博客很多的好处，并鼓励网友（特别是程序员）写博客，同学们可以去看一下。</p>

<p>我曾经想过自己现在编程水平那么一般，词语那么贫乏，写出来的博客岂不是怡笑大方？但看了这篇博客后我觉得我应该开始写博客，<strong>把有价值的思考记录下来</strong>，只要是经过自己思考的就可以。在你写的时候，你会思考这样写是否合适，是否正确，自己会不断推敲，从而对某个知识点进行更深一层的思考。希望几年后的我能欣然一笑，笑自己当初言语的幼稚，更为自己的努力没有白费而高兴。</p>

<p>有一种说法，人脑思考的时候就如拿着一盏灯在探索，照亮了前方，后方就又漆黑了，于是走着走着，也就可能迷路而无法原路返回，这时就有必要将思考的过程记录下来，相当于在你探索时的轨迹留下记号以便返回。最近做项目在遇到某些比较复杂的模块时，我会把对这个模块的逻辑思考用Markdown语言记录下来，然后思考该模块可能发生的各种情况，在编辑器里将他们写下来，然后根据这份逻辑就可以很清晰地编写代码了，我总结有以下的好处：</p>

<ol>
<li>思路清晰，避免一开始就陷入到具体代码中，容易导致思维混乱。</li>
<li>可阅性强，在清晰的文字描述下，即使是非程序员也能很容易形成思路。</li>
<li>重用性强，当以后有类似的功能或者如当前项目有Android和IOS两个平台，那么只需要写一份这样的逻辑，两边都能根据这份逻辑写出正确的代码。</li>
<li>当模块出现bug时，不必一开始就查看代码，可以先从这份逻辑中检错，如发现错误则可以修正，然后再修改具体代码。</li>
</ol>


<h2>Fight or die</h2>

<p>有的人不理解为什么要努力，为什么要坚持，反正怎么努力都比不上富二代的了，还不如过得舒服点。其实这样从一开始就否定了自己，给自己日后的失败找借口，例如一些同学在考四六级前没有好好准备，考失败后就说自己没有准备好，考失败是正常的事。这样的确过得很舒服，这就是爱因斯坦说道的<em>猪栏的理想</em>。</p>

<p>现在想做好一件事其实是很不容易的，时间过于碎片化，想找到一块连续的，大的时间块真的很不容易，对于工作后的人来说更是困难，必须付出加倍的努力。其实我们都应该相信大牛都是可以赶上的，他们也是通过了时间和努力，还有各方面的牺牲才能达到现在的水平，而不是因为我们缺乏所谓的<em>天赋</em>，<em>天赋</em>的重要性是当你到某一境界才能感受到的。我们不能急于求成，只求每天都是进步的，理想之所以为理想就在于它对于当前自己是那么遥远却又那么向往，不能想着过早实现理想。</p>

<p>的确，也许一个屌丝怎么努力，赚的钱都不够富二代的零花钱多。一个人要发生阶级性变化很大程度是需要运气的，小富靠勤，大富靠命。不同阶级有不同的生活罢了，能每天看到自己进步，为自己而努力，能给家人带来更好的生活就是莫大的幸福，作为一个男人必须Fight or die，屌丝更是如此！</p>

<h2>知识的广度与深度</h2>

<p>有一段时间我总想着闭门造车，掉进了技术的怪圈，将某些很基础的知识闭着眼拒之门外。那时觉得底层很牛逼，于是埋头钻进OS里，想着某天自己能写出一个mini os。于是把1000页的英文版<a href="http://www.amazon.com/Operating-System-Concepts-Abraham-Silberschatz/dp/1118063333">Operating System Concepts</a>放到kindle里去，每天争分夺秒地看，遇到不懂的单词就查，一定程度增加了词汇量和提高了英语阅读水平，幸运的是这是一本经典的好书，我真的学到了很多关于操作系统的东西。然后又试着完成MIT的JOS作业，但看了一部分就没看下去了，心中充满了迷茫，我是否走在正确的方向？<br/>
某天我带着这个疑问去问朋友Pro，他是一个C++牛人，主程，美工等等。他给我分析道：</p>

<ol>
<li>一个操作系统太庞大，任何一个模块都能作为一个大项目。</li>
<li>价值太小，即使我有能力在一年半载内完成一个mini os，除了让自己对底层有更多的认识，吹吹牛逼外，实际的价值几乎为0，开源了也不会有几个人去看，从研究并着手到写os的人太少了，同时这条路也太窄了。</li>
<li>投入太大，对于一个在校生的话，写os，写什么都好，只要是真的执行下去了，项目质量不差的话，对毕业找工作的帮助都是非常大的。但对于已经工作的人，留给自己的时间太少了，所以每一个选择和决策都将对自己的未来产生重大的影响，必须考虑时间的<strong>性价比</strong>。</li>
</ol>


<p>那时我们争论了很久，Pro也语重心长地和我说了很久，但我仍然十分固执，并说道“就算我走错了，也会有很多收获”。虽然的确会有收获，但是相对于时间的投入，其实是负收获。</p>

<p>经过这次的争论，我有一段时间没有和Pro交流，不是因为别的，而是因为本就晃动的坚持再次被否定，一时不愿接受这些否定。接下来的一个月我每天都会思考这个问题，终于有一天我了解到，我们不应该把自己框死在必须写OS，必须做XX，然后把不相关的知识拒之门外，应该在适当的广度下，选择适当的深度。那时我很抗拒学习数据库，认为与我的OS貌似没多少关系啊，何必浪费时间在上面呢，我还是看我的调度器吧。殊不知OS中的文件系统与数据库其实有很多相似之处，其中有一点是他们很多都是以B-Tree作为其核心数据结构的。其实对于计算机各方面有适当的广度是有必要的，可以对新的知识稍微做一下调查以决定其是否适合深入，这样在遇到他们时才不至于在机会面前而没能抓住。</p>

<h2>专注力</h2>

<p>曾经我作过一些计划，例如周1-5学习算法与数据结构，周6-7做项目实践，当时我认为自己可以做到。但后来发现其实这样是很难落实到的，因为总是会受到各种事情干扰。例如周1-5某天晚上出去和朋友吃饭了，或者某天加了班。周6-7约女朋友，朋友出去玩等等。因素实在太多了，所以说做优秀的工程师或程序员，要耐得住寂寞是有一定道理的。</p>

<p>因此最好是把力气专注在一件事物上，拿编程来说吧，可以自己选择一个领域，递进地写越来越复杂的程序，锻炼自己的General Programming技能和处理项目复杂度的能力，这样在切换到另一个领域时会轻松的多。相反如果一直在不同领域写简单的程序，General Programming技能是不能被锻炼到，最后只会各方面都不到头。</p>

<hr />

<p>以上就是我一年的几点感悟，作为我的第一篇博客。如果我能给大家带来一点感触或启发，那我就心满意足了。</p>
]]></content>
  </entry>
  
</feed>
